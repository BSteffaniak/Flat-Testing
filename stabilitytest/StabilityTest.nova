package "stabilitytest"

import "nova/time/Timer"
import "nova/thread/Thread"
import "nova/io/File"

class StabilityTest extends StabilityTestCase {
    public static main(String args[]) {
        StabilityTest n = null
        StabilityTest test = new StabilityTest(n)
        
        Timer timer = new Timer().start()
        
        test.test()
        
        timer.stop()
        
//        if (args[1] == "test")
//        System.execute("Executable.exe a")
        
        Console.writeLine("Took " + timer.duration + "ms")
        
        Console.waitForEnter()
    }
    
    public construct(StabilityTest program) {
        super(program)
    }
    
    public test() {
        try {
            new ExceptionStability().runTests()
            new SyntaxStability().runTests()
            new ClosureStability().runTests()
            new PolymorphismStability().runTests()
            new LambdaStability().runTests()
            new ToStringStability().runTests()
            new AssignmentStability().runTests()
            new RegexStability().runTests()
            new StaticImportStability().runTests()
            new InnerClassStability().runTests()
            new ExternalInnerClassStability().runTests()
            new PrimitiveOverloadStability().runTests()
            
            [Target c] new TimeStability().runTests()
            [Target c] new ThreadStability().runTests()
            [Target c] new FileStability().runTests()
            [Target c] new NetworkStability().runTests()
            
            Console.writeLine("All OK")
        }
        catch (UnstableException e) {
            Console.writeLine("Unstable exception thrown: " + e.message)
        }
    }
    
    public fail(String message = "Failed", Bool condition = true) {
        if (condition) throw new UnstableException(message)
    }
}