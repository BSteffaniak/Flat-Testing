package "stabilitytest"

class PolymorphismStability extends StabilityTestCase {
    public construct(StabilityTest program) => super(program)
    
    public test() {
        Console.writeLine("Checking Polymorphism stability...")
        
        testCalls()
        testClosure()
        testProperty()
    }
    
    testCalls() {
        Console.write("Checking polymorphic method calls... ")
        
        PolymorphicSuperClass obj1 = new PolymorphicSuperClass()
        PolymorphicSubClass   obj2 = new PolymorphicSubClass()
        
        program.fail("Did not call sub class method", !testSubCall(obj2))
        
        Console.writeLine("OK")
    }
    
    static testSubCall(PolymorphicSuperClass obj) => obj.toString().equals("sub class")
    
    testClosure() {
        Console.write("Checking polymorphic closure method calls... ")
        
        PolymorphicSuperClass obj = new PolymorphicSubClass()
        
        program.fail("Did not call sub class method as closure", !callPolymorphicClosure(obj.toString))
        
        obj.giveBirth()
        
        String child = obj.child + "!"
        
        program.fail("Did not call sub class method as closure", !callPolymorphicClosure(obj.child.toString))
        
        Console.writeLine("OK")
    }
    
    static callPolymorphicClosure(closure() -> String) => closure().equals("sub class")
    
    testProperty() {
        Console.write("Checking polymorphic properties... ")
        
        PolymorphicSuperClass obj1 = new PolymorphicSuperClass()
        PolymorphicSuperClass obj2 = new PolymorphicSubClass()
        
        program.fail("Did not call super polymorphic property accessor correctly", obj1.myProperty != 1)
        program.fail("Did not call sub polymorphic property accessor correctly", obj2.myProperty != 2)
        
        Console.writeLine("OK")
    }
}